package org.infokiosk;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2020-07-13T12:58:10.722+03:00
 * Generated source version: 3.3.6
 *
 */
@SuppressWarnings("unused")
@WebServiceClient(name = "InfoKioskWS", //NON-NLS
                  wsdlLocation = "file:/C:/Users/127/AppData/Local/Temp/tempdir1757714445526901726.tmp/infokiosk_1.wsdl", //NON-NLS
                  targetNamespace = "http://www.infokiosk.org") //NON-NLS
public class InfoKioskWS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.infokiosk.org", "InfoKioskWS"); //NON-NLS
    public final static QName InfoKioskWSSoap = new QName("http://www.infokiosk.org", "InfoKioskWSSoap"); //NON-NLS NON-NLS
    public final static QName InfoKioskWSSoap12 = new QName("http://www.infokiosk.org", "InfoKioskWSSoap12"); //NON-NLS NON-NLS
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/127/AppData/Local/Temp/tempdir1757714445526901726.tmp/infokiosk_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(InfoKioskWS.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/127/AppData/Local/Temp/tempdir1757714445526901726.tmp/infokiosk_1.wsdl"); //NON-NLS NON-NLS
        }
        WSDL_LOCATION = url;
    }

    public InfoKioskWS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InfoKioskWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InfoKioskWS() {
        super(WSDL_LOCATION, SERVICE);
    }

    public InfoKioskWS(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public InfoKioskWS(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public InfoKioskWS(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     * 
     *       
     *
     * @return
     *     returns InfoKioskWSPortType
     */
    @WebEndpoint(name = "InfoKioskWSSoap") //NON-NLS
    public InfoKioskWSPortType getInfoKioskWSSoap() {
        return super.getPort(InfoKioskWSSoap, InfoKioskWSPortType.class);
    }

    /**
     * 
     *       
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InfoKioskWSPortType
     */
    @WebEndpoint(name = "InfoKioskWSSoap") //NON-NLS
    public InfoKioskWSPortType getInfoKioskWSSoap(WebServiceFeature... features) {
        return super.getPort(InfoKioskWSSoap, InfoKioskWSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns InfoKioskWSPortType
     */
    @WebEndpoint(name = "InfoKioskWSSoap12") //NON-NLS
    public InfoKioskWSPortType getInfoKioskWSSoap12() {
        return super.getPort(InfoKioskWSSoap12, InfoKioskWSPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InfoKioskWSPortType
     */
    @WebEndpoint(name = "InfoKioskWSSoap12") //NON-NLS
    public InfoKioskWSPortType getInfoKioskWSSoap12(WebServiceFeature... features) {
        return super.getPort(InfoKioskWSSoap12, InfoKioskWSPortType.class, features);
    }

}
